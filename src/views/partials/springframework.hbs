<h1>Spring Framework</h1>
<p>SpringFramework (creado por Rod Johnson en 2004) es una herramienta que nace con la intención de simplificar y
    facilitar la construcción de aplicaciones JEE. El problema de rendimiento al utilizar los EJB en JEE hizo buscar una
    solución para mejorar y agilizar el desarrollo de aplicaciones Java.</p>

<h2>Ventajas</h2>
<br>
<h3>El uso de Spring en nuestros desarrollos tiene numerosas ventajas, entre ellas: </h3>
<br>

<p><b>- Inyección de dependencia (DI): </b> técnica o patrón de diseño utilizado como una de las formas de inversión de
    control (IOC) para favorecer el bajo acoplamiento. Es decir, cuando una clase necesita de otra clase (dependencia),
    en lugar de crear el objeto dentro de la propia clase, Spring se lo suministra o inyecta. Esta forma de IOC sigue el
    principio de Hollywood (no nos llames, nosotros te llamamos) en el que la aplicación es la que toma el control en
    lugar del código, aportando los siguientes beneficios: </p>
    
    <p>Proporciona modularidad. </p>

    <p>Escalabilidad de la aplicación sin necesidad de modificar las clases. </p>

    <p>Evita la dependencia entre clases </p>

    <p>- Desarrollo sencillo con POJOs (Plan Old Java Objects) </p>

    <p>- Minimiza el código repetitivo </p>

    <p>- Simplifica el acceso a datos gracias a los ORM (Object Relational Mapping) </p>

    <p>- Programación Orientada a Aspectos (AOP): Permite una modularización mucho más alta para hacer una separación muy clara de las diferentes tareas que debe realizar cada clase en nuestra aplicación. </p>

    <h2>Contenedor o dispatcher</h2>

    <p>Spring mediante un contenedor (Servlet) o dispatcher, proporciona los objetos o Beans que se le va solicitando. Este contenedor utiliza un archivo de configuración que puede ser definido de 3 formas diferentes: </p>

    <p>Archivo de configuración XML.</p>
    <p>Java Source Code.</p>
    <p>Java Annotations.</p>